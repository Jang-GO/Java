import java.util.*;

public class Main{
    static int n,m,answer=0;
    static int ch[]; //방문한 곳 체크배열
    static int graph[][];

    public void DFS(int v){ 
          if(v==n) answer++;
          else{
            for(int i=1;i<=n;i++){
                if(graph[v][i]==1 && ch[i]==0){
                    ch[i]=1;
                    DFS(i);
                    ch[i]=0;
                }
            }
        }
    }
    public static void main(String[] args){
        Main T = new Main();
        Scanner sc = new Scanner(System.in);
        n=sc.nextInt(); // 노드개수
        m=sc.nextInt(); // 엣지개수
        graph = new int[n+1][n+1]; // 그래프의 인덱스가 정점을 표현 -> n까지 만들려면 첫번째인덱스는 버려야함
        ch=new int[n+1]; // 1~n번까지 체크배열
        for(int i=0;i<m;i++){
            int a = sc.nextInt();
            int b = sc.nextInt();
            graph[a][b]=1; // 1번정점에서 2번정점을 잇는 방향그래프
        }
        ch[1]=1;
        T.DFS(1);
        System.out.println(answer);
    }  
}
    
