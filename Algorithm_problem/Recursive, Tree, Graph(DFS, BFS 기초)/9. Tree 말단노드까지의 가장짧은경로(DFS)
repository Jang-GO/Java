import java.util.*;
//원래 최단거리 문제는 BFS로 푸는게 맞음
//DFS의 제약: 자식이 있으면 무조건 두개가 다 있어야함 하나만 있으면 에러
class Node{
    int data;
    Node lt,rt;
    public Node(int val){
        this.data = val;
        lt = rt = null;
    }
}
public class Main{ 
    Node root;

    public int DFS(int L, Node root){ //매개변수: 레벨(루트노드에서 노드까지의 거리), 루트
        if(root.lt==null & root.rt == null) return L;
        else return Math.min(DFS(L+1,root.lt),DFS(L+1,root.rt));
   }
    public static void main(String[] args){
        Main tree = new Main();
        tree.root = new Node(1);
        tree.root.lt = new Node(2);
        tree.root.rt = new Node(3);
        tree.root.lt.lt = new Node(4);
        tree.root.lt.rt = new Node(5);
        System.out.println(tree.DFS(0,tree.root));
    }  
}
