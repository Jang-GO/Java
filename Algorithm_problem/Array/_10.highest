import java.util.*;
class Highest {
	public int solution(int n,int[][] arr) {
		int cnt=0;
		for(int i=1;i<=n;i++) {
			for(int j=1;j<=n;j++) {
				if(arr[i][j]>arr[i-1][j]&&arr[i][j]>arr[i+1][j]&&arr[i][j]>arr[i][j-1]&&arr[i][j]>arr[i][j+1]) {
					cnt++;
				}
			}
		}
		return cnt;
	}
	
	public static void main(String[] args) {
		Highest T = new Highest();
		Scanner sc = new Scanner(System.in);
		int num = sc.nextInt();
		int[][] arr = new int[num+2][num+2];
		for(int i=1;i<=num;i++) {
			for(int j=1;j<=num;j++) {
				arr[i][j] = sc.nextInt();
			}
		}
		
		System.out.println(T.solution(num,arr));
	}
}


/*다른 풀이
 * import java.util.*;

public class Main  {

    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        int size = sc.nextInt();
        int[][] arr = new int[size][size];
        int answer = 0;

        for(int i=0; i<size; i++){
            for(int j=0; j<size; j++){
                arr[i][j] = sc.nextInt();
            }
        }

		// 네방향 설정
        int[] dx = {-1,0,1,0};
        int[] dy = {0,1,0,-1};
        
        for(int i=0; i<size; i++){
            for(int j=0; j<size; j++){
                boolean flag = true;
                for(int k=0; k<4; k++){
                    int nx = i+dx[k];
                    int ny = j+dy[k];
                    // 네방향 값들과 비교하고 더 큰값이 있으면 false
                    if(arr[nx][ny]>=arr[i][j]){
                        flag=false;
                        break; // 네 방향 다 안봐도되니까 바로 break
                    }
                }
                if(flag) answer++;
            }
        }
        System.out.println(answer);
    }
}
 */

